class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
       unordered_map <string, vector<string>> mapsAnagrams;
	  for (int i = 0; i < strs.size(); i++) {
		string key = getKey(strs[i]);
		mapsAnagrams[key].push_back(strs[i]);
         	}
	// dispaly the values of the keys
	vector<vector<string>> return_group_anagrams;
	for (auto& pair : mapsAnagrams) {
		return_group_anagrams.push_back(pair.second);
	}
	return return_group_anagrams;

    }
    private:

  string getKey(string& str) {
	vector<int> count(26);

	for (int i = 0; i < str.size(); i++) {
		count[str[i] - 'a']++;

	}

	//for (auto& c : count) {
		//cout << c << " ";
	//}
	string key;
	for (int i = 0; i < count.size(); i++) {
		key.append(to_string(count[i] + 'a'));
	}
	//since the key of the map must be immutable so we converted it


	return key;


}
};
